{"version":3,"sources":["boxer.js"],"names":[],"mappings":"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","file":"boxer.js","sourcesContent":["/* * * * * * * * * * * * * *\n * PUSHES ROCKS GAME       *\n * Created by  John Hearn  *\n * CF401       March 2016  *\n * * * * * * * * * * * * * */\n \n'use strict';\nconst mobile = false;\nlet cellWidth;\nif(mobile) cellWidth = 16;\nelse       cellWidth = 32;\n\nlet listenToKeystrokes = true;\n\nconst rockURL = \"../img/boulder.png\";\nconst rockOnDotURL = \"../img/boulderondot.png\";\nconst wallURL = \"../img/dirt.png\";\nconst floorURL = \"../img/dirt2.png\";\nconst dotsURL  = \"../img/dirtDot.png\";\nconst spriteURL = \"../img/Sprite.gif\";\n\nclass Player {\n    constructor() {\n        //this.currentLevel = 0;\n        //this.levelScores = { easy: [ ], hard: [ ] };\n        //this.difficulty = \"easy\";\n    }\n}\n\nfunction User() {\n    this.currentLevel = 0;\n    this.levelScores = { easy: [ ], hard: [ ] };\n    this.difficulty = \"easy\";\n\n    this.saveData = function() {\n        // localStorage.setItem(\"Name\", JSON.stringify( this.name ) );\n        localStorage.setItem(\"Level\", JSON.stringify( this.currentLevel ) );\n        localStorage.setItem(\"Scores\", JSON.stringify( this.levelScores ) );\n        localStorage.setItem(\"Difficulty\", JSON.stringify(this.difficulty ) );\n        localStorage.setItem(\"Initialized\", JSON.stringify( 'true' ) );\n    };\n\n    this.loadData = function() {\n        this.name = JSON.parse( localStorage.getItem( \"Name\" ) );\n        this.currentLevel = JSON.parse( localStorage.getItem( \"Level\" ) );\n        this.levelScores = JSON.parse( localStorage.getItem( \"Scores\" ) );\n        this.difficulty = JSON.parse( localStorage.getItem( \"Difficulty\" ) );\n    };\n\n\n    this.init = function() {\n        // My attempt to use Boolean() to cast our localStorage string\n        // was returning true regardless of the value so I wrote my own.\n        function castToBool(stringToCast) {\n            if( stringToCast === \"true\" ) {\n                return true;\n            } else if( stringToCast === \"false\" ) {\n                return false;\n            } else {\n                console.log(\"Your attempt to cast \" + castToBool + \" to a boolean failed.\" );\n            }\n        }\n\n        this.isInitialized = castToBool( JSON.parse(localStorage.getItem(\"Initialized\") ) );\n\n        if ( !this.isInitialized ) {\n            console.log(\"false = \" + this.isInitialized + \" I'm not initialized.\");\n            for( let ii=0; ii < oldLevelData.easy.length; ii++ ) {\n                this.levelScores.easy[ii] = 0;\n            }\n            for( let ii=0; ii < oldLevelData.hard.length; ii++ ) {\n                this.levelScores.hard[ii] = 0;\n            }\n            this.saveData();\n        } else {\n            //console.log( \"true = \" + this.isInitialized + \" I'm already initialized.\");\n            //removeClass();\n            this.loadData();\n            //welcomeBack();\n        }\n    };\n}\n\nclass Coord {\n    constructor( tileType, tileURL ) {\n        this.$div = $( '<div></div>' );\n        this.$img = $( '<img></img>' );\n        this.tile = tileType;\n        this.$img.attr( 'src', tileURL );\n        this.$div.append( this.$img );\n        this.hasRock = false;\n    }\n    isADot() {\n        if ( this.tile === \"dot\" ) return true;\n        else return false;\n    }\n}\n\nclass Rock {\n    constructor( xy ) {\n        this.x = xy[0] * cellWidth;\n        this.y = xy[1] * cellWidth;\n        this.onDot = false;\n        this.$rockImg = $('<img></img>').attr('src', rockURL );\n    }\n} \n\nclass Sprite {\n    constructor( xy ) {\n        this.x = xy[0] * cellWidth;\n        this.y = xy[1] * cellWidth;\n        this.$img = $('<img></img>').attr('src', spriteURL );\n        this.stepCount = 0;\n    }\n\n}\n\nclass GameBoard {\n    constructor(levelData) {\n        this.winCondition = false;\n        this.coordinates = [];\n        this.rocks = [];\n        \n        this.$canvasJQ = $('<canvas></canvas>');\n        this.canvas = this.$canvasJQ[0];\n        this.context = this.canvas.getContext(\"2d\");\n        \n        this.$elementJQ = $('<section></section>').attr( 'id', \"container\" );\n        this.$elementJQ.addClass('container-class');\n        this.element = this.$elementJQ[0];\n        this.element.style.position = \"absolute\";\n        \n        this.boardData = levelData;\n        console.log(\"boardData\", this.boardData);\n        this.boardDimensionInPixels = this.boardData.dimension * cellWidth;\n        this.canvas.width = this.boardDimensionInPixels;\n        this.canvas.height = this.boardDimensionInPixels;\n        this.canvas.style.position = \"absolute\";\n        this.canvas.style.left = 0;\n        this.canvas.style.top = 0;\n        this.canvas.style.zIndex = \"10\";\n        \n        this.element.style.left = 0;\n        this.element.style.top = 0;\n        this.element.style.zIndex = \"0\";\n        \n        for ( let ii = 0; ii < this.boardData.dimension; ii++ ) {\n            for ( let jj = 0; jj < this.boardData.dimension; jj++ ) {\n                this.coordinates.push( [ ] );\n                this.coordinates[jj].push( new Coord( \"wall\", wallURL ) );\n                this.$elementJQ.append( this.coordinates[jj][ii].$div );\n            }\n        }\n        \n        // update floor tiles\n        for ( let ii = 0; ii < this.boardData.floor.length; ii++ ) {\n            this.updateCell(this.boardData.floor[ii], \"floor\", floorURL, false );\n        }\n        // update dot tiles\n        for ( let ii = 0; ii < this.boardData.dots.length; ii++ ) { \n            this.updateCell(this.boardData.dots[ii], \"dot\", dotsURL, false );\n        }\n        // make our rocks\n        for ( let ii = 0; ii < this.boardData.rocks.length; ii++ ) {\n            this.rocks.push( new Rock( this.boardData.rocks[ii] ) );\n            //TODO: fix model so coords are numbers not strings.\n            this.rocks[ii].onDot = this.coordinates[ Number(this.boardData.rocks[ii][0]) ][ Number(this.boardData.rocks[ii][1]) ].isADot();\n            this.coordinates[ Number(this.boardData.rocks[ii][0]) ][ Number(this.boardData.rocks[ii][1]) ].hasRock = true;\n            if( this.rocks[ii].onDot) this.rocks[ii].$rockImg.attr('src', rockOnDotURL );\n        }\n        // make a sprite\n        this.sprite = new Sprite( this.boardData.start );\n        this.draw();\n    }\n    \n    // Probably no need for this anymore\n    clearTheBoard() {\n        for ( let ii = 0; ii < this.coordinates.length; ii++ ) {\n            //console.log(\"clearing board\");\n            delete this.coordinates[ii];\n        }\n        this.coordinates = [];\n        for ( let ii = 0; ii < this.rocks.length; ii++ ) {\n            delete this.rocks[ii];\n        }\n        this.rocks = [];\n        delete this.sprite;\n        this.$elementJQ.empty();\n        this.winCondition = false;\n    }\n    \n    updateCell( xy, tileType, tileURL, rockStatus) {\n        xy[0] = Number( xy[0] );  //TODO: see if I actually need this\n        xy[1] = Number( xy[1] );        \n        this.coordinates[ xy[0] ][ xy[1] ].tile = tileType;\n        this.coordinates[ xy[0] ][ xy[1] ].$img.attr( 'src', tileURL );\n        this.coordinates[ xy[0] ][ xy[1] ].hasRock = rockStatus;\n    }\n    \n    findRock( xy ) {\n        for ( let ii = 0; ii < this.rocks.length; ii++ ) {\n            if ( xy[0] === this.rocks[ii].x && xy[1] === this.rocks[ii].y ) return ii;\n        }\n        console.log(\"Error: rock not found.\");\n    }\n    \n    checkWinCondition() {\n        let onDotCounter = 0;\n        for ( let ii = 0; ii < this.rocks.length; ii++ ) {\n            if ( this.rocks[ii].onDot ) onDotCounter++;\n        }\n        \n        if( onDotCounter === this.rocks.length ) return true;\n        else return false;\n    }\n    \n    updateRockStatus( rockIndex, oldPosition, newPosition ) {\n        this.coordinates[ oldPosition[0] ][ oldPosition[1] ].hasRock = false;\n        this.coordinates[ newPosition[0] ][ newPosition[1] ].hasRock = true;\n        \n        if( this.coordinates[ newPosition[0] ][ newPosition[1] ].isADot() ){\n            this.rocks[rockIndex].onDot = true;\n            this.rocks[rockIndex].$rockImg.attr('src', rockOnDotURL );\n        } else {\n            this.rocks[rockIndex].onDot = false;\n            this.rocks[rockIndex].$rockImg.attr('src', rockURL );\n        }\n        \n        this.winCondition = this.checkWinCondition();\n    }\n    \n    draw() {\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height );\n        for ( let ii = 0; ii < this.rocks.length; ii++ ) {\n            this.context.drawImage( this.rocks[ii].$rockImg[0], this.rocks[ii].x, this.rocks[ii].y );\n        }\n        this.context.drawImage(this.sprite.$img[0], this.sprite.x, this.sprite.y );\n    }\n    \n    tryToMove( xy, deltaXY ) {\n        let x = xy[0];\n        let y = xy[1];\n        let dx = deltaXY[0];\n        let dy = deltaXY[1];\n        let nextLocation = this.coordinates[ x + dx ][ y + dy ];\n        let twoAway = {};\n        \n        // Make sure two spaces away is on the board\n        if( ( 0 <= x + 2*dx && x + 2*dx < this.boardData.dimension ) &&\n            ( 0 <= y + 2*dy && y + 2*dy < this.boardData.dimension ) ) {\n            twoAway = this.coordinates[ x + 2*dx ][ y + 2*dy ];\n            twoAway.exists = true;\n        } else {\n            // Two spaces away would be off the board\n            twoAway.exists = false;\n        }\n        \n        if( nextLocation.tile === \"wall\" ) {\n            return;\n        } else if( nextLocation.hasRock ) {\n            if( twoAway.exists && !twoAway.hasRock && twoAway.tile !== \"wall\" ) {\n                // move with rock\n                this.move(deltaXY, true);\n            }\n            return;\n        } else if( ( nextLocation.tile === \"floor\" ) ||\n                    ( nextLocation.tile === \"dot\") ) {\n            this.move(deltaXY, false);\n            return;\n        } else {\n            console.log(\"error\");\n        }\n    }\n    \n    move( deltaXY, withRock ) {\n        listenToKeystrokes = false;\n        let x = this.sprite.x;\n        let y = this.sprite.y;\n        let self = this;\n        let draw = this.draw.bind(this);\n        let counter = 0;\n        let frames = cellWidth;\n        \n        if( withRock ) {\n            var rockIndex = self.findRock([ x + deltaXY[0]*cellWidth ,  y + deltaXY[1]*cellWidth ]);\n            var xRock = self.rocks[rockIndex].x;\n            var yRock = self.rocks[rockIndex].y;\n        }\n        \n        function drawFrame(fraction) {\n            // This looks weird, but we'll be sure that the sprite ends in\n            // a valid location when setTimeout calls drawFrame(1)\n            self.sprite.x = x + ( cellWidth * deltaXY[0] * fraction );\n            self.sprite.y = y + ( cellWidth * deltaXY[1] * fraction );\n            if( withRock ) {\n                self.rocks[rockIndex].x = xRock + ( cellWidth * deltaXY[0] * fraction );\n                self.rocks[rockIndex].y = yRock + ( cellWidth * deltaXY[1] * fraction );\n            }\n            requestAnimationFrame(draw);\n        }\n        \n        let interval = setInterval( () => {\n            counter++;\n            drawFrame(counter/frames);\n        }, 256 / cellWidth );\n        \n        setTimeout(function(){\n            clearInterval(interval);\n            drawFrame(1);\n            if ( withRock ) {\n                self.updateRockStatus( rockIndex, [ xRock/cellWidth, yRock/cellWidth ],\n                                       [ xRock/cellWidth + deltaXY[0],  yRock/cellWidth + deltaXY[1] ] );\n            }\n            self.sprite.stepCount++;\n            listenToKeystrokes = true;\n        }, 256);\n    }\n}\n\nclass GameInstance {\n    constructor(anchor, level) {\n        this.$anchor = anchor;\n        //this.player = new Player( playerData );\n        this.user = new User();\n        this.game = new GameBoard(level);\n        this.$anchor.empty();\n        this.user.init();\n        this.$anchor.append( this.game.$elementJQ );\n        this.$anchor.append( this.game.$canvasJQ );\n        $('#game').css( { 'width': this.game.boardDimensionInPixels - 10,\n                         'height': this.game.boardDimensionInPixels - 25 } );\n        $('#container').css( 'width', this.game.boardDimensionInPixels );\n        this.processInputHandler = this.processInput.bind(this);\n        this.scaleGameBoardHandler = this.scaleGameBoard.bind(this);    \n        this.scaleGameBoard();\n        this.eventListeners();\n    }\n    \n    // this (mostly) should be handled by the game-controller\n    addCurrentStatus() {\n        $('#difficulty').empty();\n        $('#currentLevel').empty();\n        $('#stepCount').empty();\n        $('#startTxt').empty();  // does this even exist?\n        $('#difficulty').append('Difficulty: ' + this.user.difficulty);\n        $('#currentLevel').append('Level: ' + this.user.currentLevel);\n        $('#stepCount').append('Steps: ' + this.game.sprite.stepCount);  //this probably needs to live in-game\n    }\n    \n    processInput(key) {\n        let keyvalue = key.keyCode;\n        let xy = [ (this.game.sprite.x / cellWidth), (this.game.sprite.y / cellWidth) ];\n        \n        // Keep key input from scrolling\n        key.preventDefault();\n        \n        if ( this.game.winCondition ) {\n            this.onDone({\"goo\":\"gob\"});            //TODO: do something useful\n            this.clearTheBoard()\n            //this.advanceTheUser();\n            //this.initializeGameBoard();\n        } else if ( listenToKeystrokes ) {\n            let deltaXY = [ 0, 0 ];\n            if      ( keyvalue === 37 ) deltaXY = [ -1,  0 ];\n            else if ( keyvalue === 38 ) deltaXY = [  0, -1 ];\n            else if ( keyvalue === 39 ) deltaXY = [  1,  0 ];\n            else if ( keyvalue === 40 ) deltaXY = [  0,  1 ];\n            \n            this.game.tryToMove( xy, deltaXY );\n            this.addCurrentStatus();\n        }\n    }\n    \n    scaleGameBoard() {\n        const buffer = ( $('header').height() + $('footer').height() ) * 2;\n        const frameHeight = $(window).height() - buffer;\n        const frameWidth = $(window).width();\n        const frameSize = Math.min( frameHeight, frameWidth );\n        let scale;\n\n        if ( this.game.boardDimensionInPixels < frameSize ) {\n            scale =  1;\n        } else {\n            scale = ( frameSize / this.game.boardDimensionInPixels ).toFixed(2);\n            this.$anchor.parent().css( 'transform', 'scale( ' + scale + ', ' + scale + ')');\n        }\n    }\n    \n    eventListeners() {\n        window.addEventListener(\"keydown\", this.processInputHandler, false);\n        window.addEventListener(\"resize\",  this.scaleGameBoardHandler, false );\n    }\n    \n    destroy() {\n        window.removeEventListener(\"keydown\", this.processInputHandler, false);\n        window.removeEventListener(\"resize\",  this.scaleGameBoardHandler, false );\n    }\n    \n/*  // We don't need this when the user is logged in\n    advanceTheUser() {\n        let winMessage = '<p id =\"winner\"> Congrats!!!! You beat level ' + (this.user.currentLevel + 1)  +\n            ' in ' + this.game.sprite.stepCount + ' steps. Press any key to move on to the next level. </p>';\n        $('#gameplay').empty();\n        $('#gameplay').append(winMessage);\n        \n        console.log( \"break: advanceTheUser \" );\n        if ( this.user.levelScores[this.user.difficulty][this.user.currentLevel] > this.game.sprite.stepCount\n             && 0 < this.user.levelScores[this.user.difficulty][this.user.currentLevel] ) {\n            this.user.levelScores[this.user.difficulty][this.user.currentLevel ] = this.game.sprite.stepCount;\n        }\n        if( this.user.currentLevel < ( levelData[this.user.difficulty].length - 1 ) ) {\n            this.user.levelScores[this.user.difficulty][this.user.currentLevel ] = this.game.sprite.stepCount;\n            this.user.currentLevel++;\n        } else if( this.user.difficulty === \"easy\"\n                   && this.user.currentLevel === levelData[this.user.difficulty].length -1) {\n            this.user.difficulty = \"hard\";\n            this.user.currentLevel = 0;\n        } else if( this.user.difficulty === \"hard\"\n                   && this.user.currentLevel === levelData[this.user.difficulty].length - 1 ) {\n            console.log(\"CONGRATULATIONS: You beat all the levels!\" );\n        } else {\n            console.log(\"Error: level index out of bounds\");\n        }\n    \n        this.user.saveData();\n    };\n*/\n    \n}\n"],"sourceRoot":"/source/"}